#pragma once

#include <Engine\Rendering\ContextWindow.h>

enum class Keycode
{
	/* Printable keys */
	KeySPACE = 32,
	KeyAPOSTROPHE = 39,
	KeyCOMMA = 44,
	KeyMINUS = 45,
	KeyPERIOD = 46,
	KeySLASH = 47,
	Key0 = 48,
	Key1 = 49,
	Key2 = 50,
	Key3 = 51,
	Key4 = 52,
	Key5 = 53,
	Key6 = 54,
	Key7 = 55,
	Key8 = 56,
	Key9 = 57,
	KeySEMICOLON = 59,
	KeyEQUAL = 61,
	KeyA = 65,
	KeyB = 66,
	KeyC = 67,
	KeyD = 68,
	KeyE = 69,
	KeyF = 70,
	KeyG = 71,
	KeyH = 72,
	KeyI = 73,
	KeyJ = 74,
	KeyK = 75,
	KeyL = 76,
	KeyM = 77,
	KeyN = 78,
	KeyO = 79,
	KeyP = 80,
	KeyQ = 81,
	KeyR = 82,
	KeyS = 83,
	KeyT = 84,
	KeyU = 85,
	KeyV = 86,
	KeyW = 87,
	KeyX = 88,
	KeyY = 89,
	KeyZ = 90,
	KeyLEFTBRACKET = 91,
	KeyBACKSLASH = 92,
	KeyRIGHTBRACKET = 93,
	KeyGRAVEACCENT = 96,
	KeyWORLD1 = 161,
	KeyWORLD2 = 162,

	/* Function keys */
	KeyESCAPE = 256,
	KeyENTER = 257,
	KeyTAB = 258,
	KeyBACKSPACE = 259,
	KeyINSERT = 260,
	KeyDELETE = 261,
	KeyRIGHT = 262,
	KeyLEFT = 263,
	KeyDOWN = 264,
	KeyUP = 265,
	KeyPAGEUP = 266,
	KeyPAGEDOWN = 267,
	KeyHOME = 268,
	KeyEND = 269,
	KeyCAPSLOCK = 280,
	KeySCROLLLOCK = 281,
	KeyNUMLOCK = 282,
	KeyPRINTSCREEN = 283,
	KeyPAUSE = 284,
	KeyF1 = 290,
	KeyF2 = 291,
	KeyF3 = 292,
	KeyF4 = 293,
	KeyF5 = 294,
	KeyF6 = 295,
	KeyF7 = 296,
	KeyF8 = 297,
	KeyF9 = 298,
	KeyF10 = 299,
	KeyF11 = 300,
	KeyF12 = 301,
	KeyF13 = 302,
	KeyF14 = 303,
	KeyF15 = 304,
	KeyF16 = 305,
	KeyF17 = 306,
	KeyF18 = 307,
	KeyF19 = 308,
	KeyF20 = 309,
	KeyF21 = 310,
	KeyF22 = 311,
	KeyF23 = 312,
	KeyF24 = 313,
	KeyF25 = 314,
	KeyKP0 = 320,
	KeyKP1 = 321,
	KeyKP2 = 322,
	KeyKP3 = 323,
	KeyKP4 = 324,
	KeyKP5 = 325,
	KeyKP6 = 326,
	KeyKP7 = 327,
	KeyKP8 = 328,
	KeyKP9 = 329,
	KeyKPDECIMAL = 330,
	KeyKPDIVIDE = 331,
	KeyKPMULTIPLY = 332,
	KeyKPSUBTRACT = 333,
	KeyKPADD = 334,
	KeyKPENTER = 335,
	KeyKPEQUAL = 336,
	KeyLEFTSHIFT = 340,
	KeyLEFTCONTROL = 341,
	KeyLEFTALT = 342,
	KeyLEFTSUPER = 343,
	KeyRIGHTSHIFT = 344,
	KeyRIGHTCONTROL = 345,
	KeyRIGHTALT = 346,
	KeyRIGHTSUPER = 347,
	KeyMENU = 348,

	KeyLAST = KeyMENU,

	// If this bit is set one or more Shift keys were held down.
	ModSHIFT = 0x0001,
	// If this bit is set one or more Control keys were held down.
	ModCONTROL = 0x0002,
	// If this bit is set one or more Alt keys were held down.
	ModALT = 0x0004,
	// If this bit is set one or more Super keys were held down.
	ModSUPER = 0x0008,

	MouseBUTTON1 = 0,
	MouseBUTTON2 = 1,
	MouseBUTTON3 = 2,
	MouseBUTTON4 = 3,
	MouseBUTTON5 = 4,
	MouseBUTTON6 = 5,
	MouseBUTTON7 = 6,
	MouseBUTTON8 = 7,
	MouseBUTTONLAST = MouseBUTTON8,
	MouseBUTTONLEFT = MouseBUTTON1,
	MouseBUTTONRIGHT = MouseBUTTON2,
	MouseBUTTONMIDDLE = MouseBUTTON3,

	JOYSTICK1 = 0,
	JOYSTICK2 = 1,
	JOYSTICK3 = 2,
	JOYSTICK4 = 3,
	JOYSTICK5 = 4,
	JOYSTICK6 = 5,
	JOYSTICK7 = 6,
	JOYSTICK8 = 7,
	JOYSTICK9 = 8,
	JOYSTICK10 = 9,
	JOYSTICK11 = 10,
	JOYSTICK12 = 11,
	JOYSTICK13 = 12,
	JOYSTICK14 = 13,
	JOYSTICK15 = 14,
	JOYSTICK16 = 15,
	JOYSTICKLAST = JOYSTICK16
};
class Input
{
public:
	static float MouseX;
	static float MouseY;
	static float Scroll;
	static float MouseSensitivity;

	// Mouse X offset from last use
	static float MouseXOffset;
	// Mouse Y offset from last use
	static float MouseYOffset;

public:
	static bool IsPressed(const Keycode keycode);
	static bool IsReleased(const Keycode keycode);
};
